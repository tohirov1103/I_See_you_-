# ============================================
# Storm-Breaker Nginx Configuration Snippet
# Add this to your existing Nginx configuration
# Domain: media.uzyol.uz
# ============================================

# HTTPS Server Block for media.uzyol.uz
server {
    listen 443 ssl http2;
    server_name media.uzyol.uz;

    # SSL Configuration (adjust paths to match your existing SSL setup)
    # Option 1: If using wildcard certificate for *.uzyol.uz
    ssl_certificate /etc/letsencrypt/live/uzyol.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/uzyol.uz/privkey.pem;

    # Option 2: If using separate certificate for media.uzyol.uz
    # ssl_certificate /etc/letsencrypt/live/media.uzyol.uz/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/media.uzyol.uz/privkey.pem;

    # SSL Protocols and Ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL Session Cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers (IMPORTANT: Relaxed for Storm-Breaker functionality)
    # Note: We intentionally allow framing and reduce CSP restrictions
    # to enable camera/microphone/location APIs to work properly
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # X-Frame-Options intentionally omitted to allow embedding
    add_header X-Content-Type-Options "nosniff" always;

    # Access Logs
    access_log /var/log/nginx/media.uzyol.uz-access.log;
    error_log /var/log/nginx/media.uzyol.uz-error.log;

    # Client Body Size (for file uploads - images/audio)
    client_max_body_size 100M;

    # Proxy to Storm-Breaker Docker Container
    location / {
        proxy_pass http://127.0.0.1:2525;
        proxy_http_version 1.1;

        # Preserve client information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Timeouts for long-running requests
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Buffering settings
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Handle PHP files specifically (Storm-Breaker uses PHP)
    location ~ \.php$ {
        proxy_pass http://127.0.0.1:2525;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|wav)$ {
        proxy_pass http://127.0.0.1:2525;
        expires 7d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to hidden files except .well-known (for Let's Encrypt)
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTP to HTTPS Redirect for media.uzyol.uz
server {
    listen 80;
    server_name media.uzyol.uz;

    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
